import * as esbuild from 'esbuild';
import process from 'process';
import builtins from 'builtin-modules';

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === 'production';
try {
	const ctx = await esbuild.context({
		entryPoints: ['src/main.ts'],
		bundle: true,
		banner: {
			js: banner,
			css: banner,
		},
		external: [
			'obsidian',
			'electron',
			'@codemirror/autocomplete',
			'@codemirror/closebrackets',
			'@codemirror/collab',
			'@codemirror/commands',
			'@codemirror/comment',
			'@codemirror/fold',
			'@codemirror/gutter',
			'@codemirror/highlight',
			'@codemirror/history',
			'@codemirror/language',
			'@codemirror/lint',
			'@codemirror/matchbrackets',
			'@codemirror/panel',
			'@codemirror/rangeset',
			'@codemirror/rectangular-selection',
			'@codemirror/search',
			'@codemirror/state',
			'@codemirror/stream-parser',
			'@codemirror/text',
			'@codemirror/tooltip',
			'@codemirror/view',
			'@lezer/common',
			'@lezer/highlight',
			'@lezer/lr',
			...builtins,
		],
		format: 'cjs',
		target: 'es2016',
		logLevel: 'info',
		sourcemap: prod ? false : 'inline',
		treeShaking: true,
		outfile: 'main.js',
	});

	if (prod) {
		ctx.rebuild();
		console.log('âœ¨ Build succeeded.');
		ctx.dispose();
	} else {
		console.log('Watching ...');
		ctx.watch();
	}
} catch (e) {
	console.log(e.message);
	process.exit(1);
}
